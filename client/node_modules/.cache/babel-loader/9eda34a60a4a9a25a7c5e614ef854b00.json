{"ast":null,"code":"import _slicedToArray from \"/home/i/code/Miami/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport { getAuthorsQuery } from '../queries/querie';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst getOptions = (loading, error, data) => {\n  if (loading) {\n    return React.createElement(\"option\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"Loading Authors...\");\n  } else if (error) {\n    return React.createElement(\"option\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Error loading Authors\");\n  } else {\n    return data.authors.map(({\n      name,\n      id\n    }) => {\n      return React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, name);\n    });\n  }\n};\n\nconst AddBook = () => {\n  const _useQuery = useQuery(getAuthorsQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genre = _useState4[0],\n        setGenre = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        author = _useState6[0],\n        setAuthor = _useState6[1];\n\n  const options = useMemo(() => getOptions(loading, error, data), [loading, error, data]);\n  const nameCB = useCallback(e => setName(e.target.value), []);\n  const genreCB = useCallback(e => setGenre(e.target.value), []);\n  const authorCB = useCallback(e => setAuthor(e.target.value), []);\n  const addCB = useCallback(e => {\n    e.preventDefault();\n    console.log(\"name: \".concat(name, \", genre: \").concat(genre, \", author: \").concat(author));\n  }, [name, genre, author]);\n  return React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: addCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Book name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: nameCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Genre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: genreCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Author:\"), React.createElement(\"select\", {\n    onChange: authorCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Select Author\"), options)), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"+\"));\n};\n\nexport default AddBook;","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js"],"names":["React","useMemo","useCallback","useState","getAuthorsQuery","useQuery","getOptions","loading","error","data","authors","map","name","id","AddBook","setName","genre","setGenre","author","setAuthor","options","nameCB","e","target","value","genreCB","authorCB","addCB","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback, useState } from 'react';\nimport { getAuthorsQuery } from '../queries/querie';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst getOptions = (loading, error, data) => {\n   if (loading) {\n      return <option disabled>Loading Authors...</option>;\n   } else if (error) {\n      return <option disabled>Error loading Authors</option>;\n   } else {\n      return data.authors.map(({ name, id }) => {\n         return (\n            <option key={id} value={id}>\n               {name}\n            </option>\n         );\n      });\n   }\n};\n\nconst AddBook = () => {\n   const { loading, error, data } = useQuery(getAuthorsQuery);\n   const [name, setName] = useState('');\n   const [genre, setGenre] = useState('');\n   const [author, setAuthor] = useState('');\n\n   const options = useMemo(() => getOptions(loading, error, data), [\n      loading,\n      error,\n      data\n   ]);\n\n   const nameCB = useCallback(e => setName(e.target.value), []);\n   const genreCB = useCallback(e => setGenre(e.target.value), []);\n   const authorCB = useCallback(e => setAuthor(e.target.value), []);\n   const addCB = useCallback(\n      e => {\n         e.preventDefault();\n         console.log(`name: ${name}, genre: ${genre}, author: ${author}`);\n      },\n      [name, genre, author]\n   );\n\n   return (\n      <form id=\"add-book\" onSubmit={addCB}>\n         <div className=\"field\">\n            <label>Book name:</label>\n            <input type=\"text\" onChange={nameCB} />\n         </div>\n\n         <div className=\"field\">\n            <label>Genre:</label>\n            <input type=\"text\" onChange={genreCB} />\n         </div>\n\n         <div className=\"field\">\n            <label>Author:</label>\n            <select onChange={authorCB}>\n               <option>Select Author</option>\n               {options}\n            </select>\n         </div>\n\n         <button>+</button>\n      </form>\n   );\n};\n\n\nexport default AddBook; "]},"metadata":{},"sourceType":"module"}