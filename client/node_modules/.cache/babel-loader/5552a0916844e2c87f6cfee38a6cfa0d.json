{"ast":null,"code":"var _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBooksQuery } from '../queries/querie';\nimport BookDetails from './BookDetails';\nexport default function BookList() {\n  const _useQuery = useQuery(getBooksQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, data.books.map(x => React.createElement(\"li\", {\n    key: x.id,\n    onClick: e => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, x.name, \", Genre: \", x.genre))), React.createElement(BookDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js"],"names":["React","useState","useQuery","getBooksQuery","BookDetails","BookList","loading","error","data","books","map","x","id","e","name","genre"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,oBACEH,QAAQ,CAACC,aAAD,CADV;AAAA,QACvBG,OADuB,aACvBA,OADuB;AAAA,QACdC,KADc,aACdA,KADc;AAAA,QACPC,IADO,aACPA,IADO;;AAE/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,CAAC,IAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AACrB,IAAA,OAAO,EAAEC,CAAC,IAAI,CAAE,CADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEnBF,CAAC,CAACG,IAFiB,eAEFH,CAAC,CAACI,KAFA,CAApB,CADL,CADJ,EAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBooksQuery } from '../queries/querie';\n\nimport BookDetails from './BookDetails';\n\nexport default function BookList() {\n    const { loading, error, data } = useQuery(getBooksQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    return (\n        <div>\n            <ul id=\"book-list\">\n                {data.books.map(x => <li key={x.id} \n                onClick={e => {}}\n                >{x.name}, Genre: {x.genre}</li>)}\n            </ul>\n            <BookDetails />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}