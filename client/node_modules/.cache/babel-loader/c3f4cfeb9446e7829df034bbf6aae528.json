{"ast":null,"code":"import _slicedToArray from \"/home/i/code/Miami/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getAuthorsQuery } from '../queries/querie';\nexport default function AddBook() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setname = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genre = _useState4[0],\n        setgenre = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        authorId = _useState6[0],\n        setauthorId = _useState6[1];\n\n  const _useQuery = useQuery(getAuthorsQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(name, genre, authorId);\n  };\n\n  const getOptions = (loading, data, error) => {\n    if (loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Loading Authors...\");\n    }\n\n    if (error) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Error occured\");\n    }\n\n    if (data) {\n      return data.authors.map(x => React.createElement(\"option\", {\n        key: x.id,\n        value: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, x.name));\n    }\n  };\n\n  return React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Book name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setname(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Genre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: genre,\n    onChange: e => setgenre(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Author:\"), React.createElement(\"select\", {\n    name: \"author\",\n    onChange: e => setauthorId(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, getOptions(loading, error, data))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"+\"));\n}","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js"],"names":["React","useState","useQuery","getAuthorsQuery","AddBook","name","setname","genre","setgenre","authorId","setauthorId","loading","error","data","submitForm","e","preventDefault","console","log","getOptions","authors","map","x","id","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getAuthorsQuery } from '../queries/querie';\n\n\nexport default function AddBook() {\n    const [name, setname] = useState('');\n    const [genre, setgenre] = useState('');\n    const [authorId, setauthorId] = useState('')\n\n    const { loading, error, data } = useQuery(getAuthorsQuery);\n    \n    const submitForm = e => {\n        e.preventDefault();\n        console.log(name, genre, authorId)\n    }\n    const getOptions = (loading, data, error) => {\n        if(loading) {\n            return <option disabled>Loading Authors...</option>\n        }\n        if(error) {\n            return <option disabled>Error occured</option>\n        }\n        if(data) {\n            return data.authors.map(x=> <option key ={x.id} value={x.id}>{x.name}</option>)\n        }\n    }\n    return (\n        <form id=\"add-book\" onSubmit={submitForm}>\n            <div className=\"field\">\n                <label>Book name:</label>\n                <input type=\"text\" value={name} onChange={(e)=>setname(e.target.value)}/>\n            </div>\n\n            <div className=\"field\">\n                <label>Genre:</label>\n                <input type=\"text\" value={genre} onChange={(e)=>setgenre(e.target.value)}/>\n            </div>\n\n            <div className=\"field\">\n                <label>Author:</label>\n                <select name=\"author\" onChange={(e)=>setauthorId(e.target.value)}>\n                    {getOptions(loading, error, data)}\n                </select>\n            </div>\n\n            <button>+</button>\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}