{"ast":null,"code":"import _slicedToArray from \"/home/i/code/Miami/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBooksQuery } from '../queries/query';\nimport BookDetails from './BookDetails';\nexport default function BookList() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const _useQuery = useQuery(getBooksQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, data.books.map(book => React.createElement(\"li\", {\n    key: book.id,\n    onClick: e => {\n      setSelected(book.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, book.name, \", Genre: \", book.genre))), React.createElement(BookDetails, {\n    bookId: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js"],"names":["React","useState","useQuery","getBooksQuery","BookDetails","BookList","selected","setSelected","loading","error","data","books","map","book","id","e","name","genre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,oBACCJ,QAAQ,CAAC,IAAD,CADT;AAAA;AAAA,QACxBK,QADwB;AAAA,QACdC,WADc;;AAAA,oBAGEL,QAAQ,CAACC,aAAD,CAHV;AAAA,QAGvBK,OAHuB,aAGvBA,OAHuB;AAAA,QAGdC,KAHc,aAGdA,KAHc;AAAA,QAGPC,IAHO,aAGPA,IAHO;;AAI/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AACxB,IAAA,OAAO,EAAEC,CAAC,IAAI;AAACR,MAAAA,WAAW,CAACM,IAAI,CAACC,EAAN,CAAX;AAAqB,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEtBD,IAAI,CAACG,IAFiB,eAEFH,IAAI,CAACI,KAFH,CAAvB,CADL,CADJ,EAMI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEX,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBooksQuery } from '../queries/query';\n\nimport BookDetails from './BookDetails';\n\nexport default function BookList() {\n    const [selected, setSelected] = useState(null);\n\n    const { loading, error, data } = useQuery(getBooksQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    return (\n        <div>\n            <ul id=\"book-list\">\n                {data.books.map(book => <li key={book.id} \n                onClick={e => {setSelected(book.id)}}\n                >{book.name}, Genre: {book.genre}</li>)}\n            </ul>\n            <BookDetails bookId={selected}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}