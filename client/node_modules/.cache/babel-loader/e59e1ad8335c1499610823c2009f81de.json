{"ast":null,"code":"var _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getAuthorsQuery } from '../queries/querie';\nexport default function AddBook() {\n  state = {\n    name: '',\n    genre: '',\n    authorId: ''\n  };\n\n  const _useQuery = useQuery(getAuthorsQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  console.log(data, error);\n  return React.createElement(\"form\", {\n    id: \"add-book\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Book name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Genre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Author:\"), React.createElement(\"select\", {\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, loading && React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Loading...\"), error && React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Error :(\"), data && data.authors.map(x => React.createElement(\"option\", {\n    key: x.id,\n    value: x.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, x.name)))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"+\"));\n}","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/AddBook.js"],"names":["React","useQuery","getAuthorsQuery","AddBook","state","name","genre","authorId","loading","error","data","console","log","authors","map","x","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAGA,eAAe,SAASC,OAAT,GAAmB;AAC9BC,EAAAA,KAAK,GAAG;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAAR;;AAD8B,oBAMGN,QAAQ,CAACC,eAAD,CANX;AAAA,QAMtBM,OANsB,aAMtBA,OANsB;AAAA,QAMbC,KANa,aAMbA,KANa;AAAA,QAMNC,IANM,aAMNA,IANM;;AAQ9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBD,KAAlB;AACA,SACI;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAWI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,EAAb;AAAgB,IAAA,EAAE,EAAC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEKC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFd,EAGKC,IAAI,IAAIA,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,CAAC,IAAG;AAAQ,IAAA,GAAG,EAAGA,CAAC,CAACC,EAAhB;AAAoB,IAAA,KAAK,EAAED,CAAC,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,CAAC,CAACV,IAApC,CAArB,CAHb,CAFJ,CAXJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SApBJ,CADJ;AAwBH","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getAuthorsQuery } from '../queries/querie';\n\n\nexport default function AddBook() {\n    state = {\n        name: '',\n        genre: '',\n        authorId: ''\n    }\n    const { loading, error, data } = useQuery(getAuthorsQuery);\n    \n    console.log(data, error)\n    return (\n        <form id=\"add-book\">\n            <div className=\"field\">\n                <label>Book name:</label>\n                <input type=\"text\"/>\n            </div>\n\n            <div className=\"field\">\n                <label>Genre:</label>\n                <input type=\"text\"/>\n            </div>\n\n            <div className=\"field\">\n                <label>Author:</label>\n                <select name=\"\" id=\"\">\n                    {loading && <option>Loading...</option>}\n                    {error && <option>Error :(</option>}\n                    {data && data.authors.map(x=> <option key ={x.id} value={x.id}>{x.name}</option>)}\n                </select>\n            </div>\n\n            <button>+</button>\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}