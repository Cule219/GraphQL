{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/code/Miami/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n        books{\\n            name\\n            genre\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql, ApolloClient } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nconst getBooksQuery = gql(_templateObject());\n\nfunction BookList() {\n  const _useQuery = useQuery(getBooksQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Error :(\");\n  console.log(data, error);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data.books.map(x => React.createElement(\"li\", {\n    id: x.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Book Name: \", x.name, \", Genre: \", x.genre))));\n}\n\nexport default BookList; //);ApolloClient.graphql(getBooksQuery)(","map":{"version":3,"sources":["/home/i/code/Miami/graphql-playlist/client/src/componenets/BookList.js"],"names":["React","gql","ApolloClient","useQuery","getBooksQuery","BookList","loading","error","data","console","log","books","map","x","id","name","genre"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,cAAlC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,aAAa,GAAGH,GAAH,mBAAnB;;AAUA,SAASI,QAAT,GAAoB;AAAA,oBACiBF,QAAQ,CAACC,aAAD,CADzB;AAAA,QACRE,OADQ,aACRA,OADQ;AAAA,QACCC,KADD,aACCA,KADD;AAAA,QACQC,IADR,aACQA,IADR;;AAEhB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBD,KAAlB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,CAAC,IAAI;AAAI,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0BD,CAAC,CAACE,IAA5B,eAA2CF,CAAC,CAACG,KAA7C,CAApB,CADL,CADJ,CADJ;AAOH;;AACD,eAAeX,QAAf,C,CAAuB","sourcesContent":["import React from 'react';\nimport { gql, ApolloClient } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst getBooksQuery = gql`\n    {\n        books{\n            name\n            genre\n            id\n        }\n    }\n`\n\nfunction BookList() {\n    const { loading, error, data } = useQuery(getBooksQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data, error);\n    return (\n        <div>\n            <ul id=\"book-list\">\n                {data.books.map(x => <li id={x.id}>Book Name: {x.name}, Genre: {x.genre}</li>)}\n            </ul>\n        </div>\n    )\n}\nexport default BookList//);ApolloClient.graphql(getBooksQuery)("]},"metadata":{},"sourceType":"module"}